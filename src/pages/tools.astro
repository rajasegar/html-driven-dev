---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Tools - HTML Driven Development">
		<main class="container max-w-7xl mx-auto px-2 mt-4 dark:text-white sm:px-6 lg:px-8"><h1 class="text-5xl text-center font-bold py-4 text-gray-900 dark:text-white">&lt;Tools/&gt;</h1><div class="p-2 mb-4 rounded-3 bg-gray-dark"><div class="container-fluid"><p class="col-md-12 fs-4">Some of the amazing frameworks and libraries that promote some or most of the values of HTML Driven Development.</p></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-1"><h2 class="text-2xl font-bold text-indigo-600 mb-2">htmx</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://htmx.org">htmx</a> allows you to access AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext. htmx is small (~10k min.gz'd), dependency-free, extendable &amp; IE11 compatible</p><p class="lead">htmx is a library that allows you to access modern browser features directly from HTML, rather than using javascript.  htmx extends and generalizes the core idea of HTML as a hypertext, opening up many more possibilities directly within the language. </p></div><div class="order-2"><a href="https://htmx.org"><img class="mx-auto" src="/images/htmx-500.jpg" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-2"><h2 class="text-2xl font-bold text-indigo-600 mb-2">hotwire</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://hotwire.dev">Hotwire</a> is an alternative approach to building modern web applications without using much JavaScript by sending HTML instead of JSON over the wire. This makes for fast first-load pages, keeps template rendering on the server, and allows for a simpler, more productive development experience in any programming language, without sacrificing any of the speed or responsiveness associated with a traditional single-page application.</p></div><div class="order-1"><a href="https://hotwire.dev"><img class="bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto" src="/images/hotwire-500.jpg" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-1"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Phoenix LiveView</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://github.com/phoenixframework/phoenix:live:view">Phoenix LiveView</a> enables rich, real-time user experiences with server-rendered HTML. The LiveView programming model is declarative: instead of saying "once event X happens, change Y on the page", events in LiveView are regular messages which may cause changes to its state. Once the state changes, LiveView will re-render the relevant parts of its HTML template and push it to the browser, which updates itself in the most efficient manner. This means developers write LiveView templates as any other server-rendered HTML and LiveView does the hard work of tracking changes and sending the relevant diffs to the browser.</p></div><div class="order-2"><a href="https://github.com/phoenixframework/phoenix:live:view"><img class="mx-auto" src="/images/phoenix-500.jpg" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-2"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Laravel Livewire</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://laravel-livewire.com">Livewire</a> is a full-stack framework for Laravel that makes building dynamic interfaces simple, without leaving the comfort of Laravel.</p></div><div class="order-1"><a href="https://laravel-livewire.com/"><img class="bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto" src="/images/livewire-500.jpg" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-1"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Marko</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://markojs.com">Marko</a> is HTML re-imagined as a language for building dynamic and reactive user interfaces. Just about any valid HTML is valid Marko, but Marko extends the HTML language to allow building modern applications in a declarative way.</p></div><div class="order-2"><a href="https://markojs.com"><img class="mx-auto" src="/images/marko-500.png" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-2"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Astro</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://astro.build">Astro</a> allows you to build faster websites with less client-side Javascript.</p><p class="lead">Astro lets you use any framework you want (or none at all). And if most sites only have islands of interactivity, shouldnâ€™t our tools optimize for that? Astro is not the first to ask the question, but it might be the first with an answer for every framework.</p></div><div class="order-1"><a href="https://astro.build"><img class="bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto" src="images/astro-500.png" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-1"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Sockpuppet</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://sockpuppet.argpar.se">Sockpuppet</a> is a new way to craft modern, reactive web interfaces with Django. We extend the capabilities of both Django and Stimulus by intercepting user interactions and passing them to Django over real-time websockets. These interactions are processed by Reflex actions that change application state. The current page is quickly re-rendered and the changes are sent to the client. The page is then morphed to reflect the new application state. This entire round-trip allows us to update the UI in 20-30ms without flicker or expensive page loads.</p></div><div class="order-2"><a href="https://sockpuppet.argpar.se/"><img class="mx-auto" src="images/sockpuppet-500.png" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-2"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Unpoly</h2><p class="lead">The <a class="text-indigo-600 hover:text-indigo-900" href="https://unpoly.com">unobtrusive JavaScript framework</a> for server-side web applications Unpoly enables fast and flexible frontends while keeping rendering logic on the server. It has no dependencies and plays nice with existing code.</p></div><div class="order-1"><a href="https://unpoly.com/"><img class="bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto" src="images/unpoly-500.png" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-1"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Alpine.js</h2><p class="lead">A rugged, minimal framework for composing JavaScript behavior in your markup. <a class="text-indigo-600 hover:text-indigo-900" href="https://github.com/alpinejs/alpine">Alpine.js</a> offers you the reactive and declarative nature of big frameworks like Vue or React at a much lower cost. You get to keep your DOM, and sprinkle in behavior as you see fit.</p></div><div class="order-2"><a href="https://github.com/alpinejs/alpine"><img class="mx-auto" src="images/alpine-500.png" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-2"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Inertia.js</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://inertiajs.com">Inertia.js</a> lets you quickly build modern single-page React, Vue and Svelte apps using classic server-side routing and controllers.</p><p class="lead">It is a new approach to building classic server-driven web apps. It allows you to create fully client-side rendered, single-page apps, without much of the complexity that comes with modern SPAs. It does this by leveraging existing server-side frameworks. It has no client-side routing, nor does it require an API.</p></div><div class="order-1"><a href="https://inertiajs.com"><img class="bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto" src="images/inertia-500.png" aria-label="Framework logo" width="500" height="500"></a></div></div><div class="md:grid grid-cols-2 gap-4 my-8"><div class="order-1"><h2 class="text-2xl font-bold text-indigo-600 mb-2">Mavo</h2><p class="lead"><a class="text-indigo-600 hover:text-indigo-900" href="https://mavo.io" target=":blank">Mavo</a> is a new, approachable way to create Web applications. You can create complex, reactive, persistent web applications by just writing HTML &amp; CSS, without a single line of JavaScript and no server backend. It was developed in the Haystack Group at <a class="text-indigo-600 hover:text-indigo-900" href="http://csail.mit.edu/" target=":blank">MIT CSAIL</a> and led by <a class="text-indigo-600 hover:text-indigo-900" href="https://lea.verou.me/" target=":blank">Lea Verou</a>. </p><p class="lead">Mavo extends the syntax of HTML to describe Web applications that manage, store, and transform data. You can store data in the cloud, locally, or not at all by just changing an HTML attribute.</p></div><div class="order-2"><a href="https://mavo.io/"><img class="mx-auto" src="images/mavo-logo.svg" aria-label="Framework logo" width="500" height="500"></a></div></div></main>
</Layout>
